<strong>@Title</strong>

@((MarkupString)Content)

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public string? Title { get; set; }
    [Parameter]
    public string? Content { get; set; } = string.Empty;
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? Replacement { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var mardownFile = System.IO.File.ReadAllText($@"{System.IO.Directory.GetCurrentDirectory()}\wwwroot\{Content}.html");
        if (Replacement != null)
        {
            System.Text.StringBuilder file = new(mardownFile);
            foreach (var item in Replacement) file.Replace("{" + item.Key + "}", item.Value.ToString());
            mardownFile = file.ToString();
        }

        Content = mardownFile;
    }
}
